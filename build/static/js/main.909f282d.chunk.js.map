{"version":3,"sources":["components/Card.js","App.js","index.js"],"names":["Card","props","status","style","textAlign","bkc","key","temp","sensorID","Typography","variant","fontWeight","Grid","item","xs","padding","height","Paper","backgroundColor","color","PORT","process","socket","io","App","useState","t1","setTemp1","t2","setTemp2","t3","setTemp3","t4","setTemp4","useEffect","on","data","className","container","direction","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAkEeA,EA/DF,SAACC,GACV,IAAIC,EAAS,wBAAIC,MAAO,CAACC,UAAU,WAAtB,aACTC,EAAM,UACJC,EAA6B,qBAAhBL,EAAMM,KACrBC,EAAW,GAEf,GAAIF,EAAK,CAAC,IACDC,EAAQN,EAAMM,KAAdA,KACPC,EAAWP,EAAMM,KAAKC,SAEnBD,GAAQA,GAAM,MACbF,EAAM,UACNH,EACA,oCACI,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKP,MAAO,CAACQ,WAAY,IAAKP,UAAU,WAA5D,qBAGA,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKP,MAAO,CAACQ,WAAY,IAAKP,UAAU,WACvDG,EADL,YAMAA,GAAQA,GAAM,MACpBF,EAAM,UACNH,EACA,oCACI,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKP,MAAO,CAACQ,WAAY,IAAKP,UAAU,WAA5D,+BAGA,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKP,MAAO,CAACQ,WAAY,IAAKP,UAAU,WACvDG,EADL,YAMyB,qBAAhBN,EAAMM,OACnBF,EAAM,UACNH,EACA,oCACE,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKP,MAAO,CAACQ,WAAY,IAAKP,UAAU,WAA5D,wCAON,OACE,kBAACQ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGX,MAAO,CAACC,UAAU,QAASW,QAAQ,EAAGC,OAAO,WAC7D,kBAACC,EAAA,EAAD,CAAOd,MAAO,CAACa,OAAO,OAAQE,gBAAiBb,EAAKc,MAAM,UAExDb,GAAO,oCACP,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKP,MAAO,CAACC,UAAU,QAASW,QAAQ,KAA5D,eACeP,IAGb,6BAPJ,IAOW,6BAPX,IAOkB,6BACfN,KCxDLkB,EAAOC,mHAAYD,MAAQ,KAC3BE,EAASC,IAAG,aAAD,OAAcH,IA2BhBI,MAzBf,WAAgB,IAAD,EACUC,qBADV,mBACNC,EADM,KACFC,EADE,OAEUF,qBAFV,mBAENG,EAFM,KAEFC,EAFE,OAGUJ,qBAHV,mBAGNK,EAHM,KAGFC,EAHE,OAIUN,qBAJV,mBAINO,EAJM,KAIFC,EAJE,KAab,OAPAC,qBAAU,WACRZ,EAAOa,GAAG,QAAQ,SAACC,GAAD,OAAUT,EAASS,MACrCd,EAAOa,GAAG,SAAS,SAACC,GAAD,OAAUP,EAASO,MACtCd,EAAOa,GAAG,SAAS,SAACC,GAAD,OAAUL,EAASK,MACtCd,EAAOa,GAAG,SAAS,SAACC,GAAD,OAAUH,EAASG,QACtC,IAGA,yBAAKC,UAAU,OACb,kBAACzB,EAAA,EAAD,CAAM0B,WAAS,EAAEC,UAAU,MAAMpC,MAAO,CAAEY,QAAQ,KAChD,kBAAC,EAAD,CAAMR,KAAMmB,IACZ,kBAAC,EAAD,CAAMnB,KAAMqB,IACZ,kBAAC,EAAD,CAAMrB,KAAMuB,IACZ,kBAAC,EAAD,CAAMvB,KAAMyB,OCtBpBQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.909f282d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\n\r\nconst Card = (props) => {\r\n    let status = <h2 style={{textAlign:\"center\"}}>NO SIGNAL</h2>;\r\n    let bkc = \"#000000\";\r\n    const key = typeof(props.temp) !== \"undefined\";\r\n    let sensorID = \"\";\r\n\r\n    if( key ){\r\n      const {temp} = props.temp;\r\n      sensorID = props.temp.sensorID;\r\n\r\n      if(temp && temp<=37.5) {\r\n          bkc = '#41c847';\r\n          status = (\r\n          <>\r\n              <Typography variant=\"h5\" style={{fontWeight: 700, textAlign:\"center\"}}>\r\n                  No fever detected\r\n              </Typography>\r\n              <Typography variant=\"h6\" style={{fontWeight: 700, textAlign:\"center\"}}>\r\n                  {temp} °C\r\n              </Typography>\r\n          </>\r\n          )\r\n      }\r\n      else if(temp && temp>=37.5){\r\n        bkc = '#e41414';\r\n        status = (\r\n        <>\r\n            <Typography variant=\"h5\" style={{fontWeight: 700, textAlign:\"center\"}}>\r\n                Fever detected, Careful !!!\r\n            </Typography>\r\n            <Typography variant=\"h6\" style={{fontWeight: 700, textAlign:\"center\"}}>\r\n                {temp} °C\r\n            </Typography>\r\n        </>\r\n        )\r\n      }\r\n      else if(typeof(props.temp) !== \"undefined\"){\r\n        bkc = \"#9c9696\";\r\n        status = (\r\n        <>\r\n          <Typography variant=\"h6\" style={{fontWeight: 700, textAlign:\"center\"}}>\r\n              Waiting for temperature reading...\r\n          </Typography>\r\n        </>\r\n      )}\r\n    }\r\n\r\n    return (\r\n      <Grid item xs={6} style={{textAlign:\"start\", padding:6, height:\"46.5vh\"}}>\r\n        <Paper style={{height:\"100%\", backgroundColor: bkc, color:\"white\"}}>\r\n\r\n        { key && <>\r\n          <Typography variant=\"h4\" style={{textAlign:\"start\", padding:15}}>\r\n            Thermometer {sensorID}\r\n          </Typography>\r\n        </>}\r\n            <br /> <br /> <br />\r\n          {status}\r\n        </Paper>\r\n      </Grid>\r\n    )\r\n}\r\n \r\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport io from 'socket.io-client';\nimport Card from './components/Card';\nconst PORT = process.env.PORT || 8001;\nconst socket = io(`localhost:${PORT}`);\n\nfunction App() {\n  const [t1, setTemp1] = useState();\n  const [t2, setTemp2] = useState();\n  const [t3, setTemp3] = useState();\n  const [t4, setTemp4] = useState();\n\n  useEffect(()=>{\n    socket.on(\"temp\", (data) => setTemp1(data) );\n    socket.on(\"temp2\", (data) => setTemp2(data) );\n    socket.on(\"temp3\", (data) => setTemp3(data) );\n    socket.on(\"temp4\", (data) => setTemp4(data) );\n  },[])\n\n  return (\n    <div className=\"App\" >\n      <Grid container  direction=\"row\" style={{ padding:10 }}>\n        <Card temp={t1} />\n        <Card temp={t2} />\n        <Card temp={t3} />\n        <Card temp={t4} />\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}